<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <decisions>
        <name>Case_Status_decision</name>
        <label>Case Status decision</label>
        <locationX>50</locationX>
        <locationY>575</locationY>
        <defaultConnector>
            <targetReference>Update_Case_Status_to_Correspondence_Received_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Case_status_equals_Awaiting_Documents</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Find_the_related_case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Awaiting Documents</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue</targetReference>
            </connector>
            <label>Case status equals Awaiting Documents</label>
        </rules>
        <rules>
            <name>Case_Status_equals_Received</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Find_the_related_case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Received</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue</targetReference>
            </connector>
            <label>Case Status equals Received</label>
        </rules>
        <rules>
            <name>Case_status_equals_Quoted</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Find_the_related_case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Quoted</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue</targetReference>
            </connector>
            <label>Case status equals Quoted</label>
        </rules>
        <rules>
            <name>Case_status_equals_Started</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Find_the_related_case.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Started</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Queue</targetReference>
            </connector>
            <label>Case status equals Started</label>
        </rules>
    </decisions>
    <decisions>
        <name>Email_In_or_Out</name>
        <label>Email In or Out</label>
        <locationX>490</locationX>
        <locationY>335</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Email_Incoming</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Incoming</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Find_the_related_case</targetReference>
            </connector>
            <label>Email Incoming</label>
        </rules>
        <rules>
            <name>Email_Outgoing</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Congratulations - you&apos;ve been approved!</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Subject</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Update on your loan application - Verified</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Sub_Status_to_Awaiting_Responese_0</targetReference>
            </connector>
            <label>Email Outgoing</label>
        </rules>
    </decisions>
    <description>When an email comes in, the Case Status gets changed to Chase for Status&apos; Awaiting documentations and received</description>
    <environments>Default</environments>
    <interviewLabel>When email comes in to Case, Update Status to Substatus Chase {!$Flow.CurrentDateTime}</interviewLabel>
    <label>When email comes in to Case, Update Status to Substatus Chase</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Find_the_related_case</name>
        <label>Find the related case</label>
        <locationX>50</locationX>
        <locationY>455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Case_Status_decision</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Parent.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Case</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Queue</name>
        <label>Get Queue</label>
        <locationX>50</locationX>
        <locationY>1031</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Update_Case_Status_to_Correspondence_Received</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SSQueue</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Case_Status_to_Correspondence_Received</name>
        <label>Update Case Status to Correspondence Received</label>
        <locationX>50</locationX>
        <locationY>1151</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Parent.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Sub_Status__c</field>
            <value>
                <stringValue>Correspondence Received</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Case_Status_to_Correspondence_Received_0</name>
        <label>Update Case Status to Correspondence Received</label>
        <locationX>402</locationX>
        <locationY>695</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Parent.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Sub_Status__c</field>
            <value>
                <stringValue>Correspondence Received</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <description>When an email comes in and Status = Under Review, then change the sub-status to Correspondence Received</description>
        <name>Update_Sub_Status_to_Awaiting_Responese_0</name>
        <label>Update Sub Status to Awaiting Customer Responese</label>
        <locationX>666</locationX>
        <locationY>455</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Parent.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Assessment_Quality__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>To Be Assessed</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>Sub_Status__c</field>
            <value>
                <stringValue>Awaiting Customer Response</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>364</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Email_In_or_Out</targetReference>
        </connector>
        <object>EmailMessage</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>SSQueue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <stringValue>Sales_Service_Queue</stringValue>
        </value>
    </variables>
</Flow>
